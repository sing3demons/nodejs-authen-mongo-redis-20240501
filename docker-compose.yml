services:
  redis:
    image: redis:6.2.5
    hostname: redis
    container_name: redis
    restart: always
    ports:
      - '6379:6379'
  redislnsight:
    image: redis/redisinsight:latest
    hostname: redislnsight
    container_name: redislnsight
    restart: always
    volumes:
      - ./dist/redisinsight:/data
    ports:
      - '8001:5540'
    environment:
      REDISINSIGHT_REDIS_URI: 'redis://redis:6379'
  mongodb1:
    image: mongo:5
    container_name: mongodb1
    command: ['--replSet', 'my-replica-set', '--bind_ip_all', '--port', '27017']
    volumes:
      - ./data/mongo-1:/data/db
    ports:
      - 27017:27017
    healthcheck:
      test: test $$(echo "rs.initiate({_id:'my-replica-set',members:[{_id:0,host:\"mongodb1:27017\"},{_id:1,host:\"mongodb2:27018\"},{_id:2,host:\"mongodb3:27019\"}]}).ok || rs.status().ok" | mongo --port 27017 --quiet) -eq 1
      interval: 10s
      start_period: 30s

  mongodb2:
    image: mongo:5
    container_name: mongodb2
    command: ['--replSet', 'my-replica-set', '--bind_ip_all', '--port', '27018']
    volumes:
      - ./data/mongo-2:/data/db
    ports:
      - 27018:27018

  mongodb3:
    image: mongo:5
    container_name: mongodb3
    command: ['--replSet', 'my-replica-set', '--bind_ip_all', '--port', '27019']
    volumes:
      - ./data/mongo-3:/data/db
    ports:
      - 27019:27019
  # mongodb:
  #   image: mongo:6
  #   hostname: mongodb
  #   container_name: mongodb
  #   restart: always
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: DEV_USER
  #     MONGO_INITDB_ROOT_PASSWORD: C3BAD562-8968-4CD4-90CE-43B6E0BA2362
  #     MONGO_INITDB_DATABASE: todo
  #   ports:
  #     - '27017:27017'
